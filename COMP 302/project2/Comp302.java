/*
 * Comp302.java
 *
 * Created on March 6, 2003, 2:52 PM
 *
 * with netbeans
 */

import javax.swing.*;
import java.util.Calendar;

public class Comp302 extends javax.swing.JFrame {
    
    /** Creates new form Comp302 */
    public Comp302() {
        initComponents();
	ad = new AuthDialog(null, "Authentication");
	ad.show();
	String userid=ad.getUserName();
	String password=ad.getDatabasePassword();
        model = new SqlModel302(userid, password);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Book = new javax.swing.JPanel();
        bookLookUp = new javax.swing.JButton();
        showCat = new javax.swing.JButton();
        showLoanedBook = new javax.swing.JButton();
        Author = new javax.swing.JPanel();
        showAuthor = new javax.swing.JButton();
        showAllAuth = new javax.swing.JButton();
        Customer = new javax.swing.JPanel();
        showCus = new javax.swing.JButton();
        showAllCus = new javax.swing.JButton();
        BorrowBook = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        bISBN = new javax.swing.JTextField();
        bCusId = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        bday = new javax.swing.JComboBox();
        bmonth = new javax.swing.JComboBox();
        byear = new javax.swing.JComboBox();
        borrow = new javax.swing.JButton();
        RetBook = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        retISBN = new javax.swing.JTextField();
        retCusId = new javax.swing.JTextField();
        returnBook = new javax.swing.JButton();
        outputArea = new javax.swing.JTextArea(3000,200);
	JScrollPane sp = new JScrollPane(outputArea);
	sp.setPreferredSize(new java.awt.Dimension(10, 10));
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jTabbedPane1.setToolTipText("Library Function");
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(32767, 20000));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(15, 85));
        Book.setLayout(new java.awt.GridLayout(1, 3, 2, 0));

        Book.setName("Book");
        bookLookUp.setText("Book Lookup");
        bookLookUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookLookUpActionPerformed(evt);
            }
        });

        Book.add(bookLookUp);

        showCat.setText("Show Catalogue");
        showCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showCatActionPerformed(evt);
            }
        });

        Book.add(showCat);

        showLoanedBook.setText("Show Loaned Books");
        showLoanedBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showLoanedBookActionPerformed(evt);
            }
        });

        Book.add(showLoanedBook);

        jTabbedPane1.addTab("Book", null, Book, "Book");

        Author.setLayout(new java.awt.GridLayout(1, 2, 2, 0));

        showAuthor.setText("Show Author");
        showAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAuthorActionPerformed(evt);
            }
        });

        Author.add(showAuthor);

        showAllAuth.setText("Show All Authors");
        showAllAuth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllAuthActionPerformed(evt);
            }
        });

        Author.add(showAllAuth);

        jTabbedPane1.addTab("Author", null, Author, "");

        Customer.setLayout(new java.awt.GridLayout(1, 2, 2, 0));

        showCus.setText("Show Customer");
        showCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showCusActionPerformed(evt);
		
            }
        });

        Customer.add(showCus);

        showAllCus.setText("Show All Customers");
        showAllCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllCusActionPerformed(evt);
            }
        });

        Customer.add(showAllCus);

        jTabbedPane1.addTab("Customer", null, Customer, "Customer");

        BorrowBook.setLayout(new java.awt.BorderLayout(2, 1));

        jPanel1.setLayout(new java.awt.GridLayout(3, 1));

        jLabel1.setText("ISBN:");
        jPanel1.add(jLabel1);

        jLabel2.setText("Customer ID:");
        jPanel1.add(jLabel2);

        jLabel3.setText("Due Date:");
        jPanel1.add(jLabel3);

        BorrowBook.add(jPanel1, java.awt.BorderLayout.WEST);

        jPanel2.setLayout(new java.awt.GridLayout(3, 1));

        jPanel2.add(bISBN);

        jPanel2.add(bCusId);

        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        bday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        jPanel5.add(bday);

        bmonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        jPanel5.add(bmonth);

        byear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2003", "2004", "2005" }));
	bday.setSelectedIndex(Calendar.getInstance().get(Calendar.DAY_OF_MONTH)-1);
	bmonth.setSelectedIndex(Calendar.getInstance().get(Calendar.MONTH));

        jPanel5.add(byear);

        jPanel2.add(jPanel5);

        BorrowBook.add(jPanel2, java.awt.BorderLayout.CENTER);

        borrow.setText("Borrow");
        borrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowActionPerformed(evt);
            }
        });

        BorrowBook.add(borrow, java.awt.BorderLayout.EAST);

        jTabbedPane1.addTab("Borrow Book", null, BorrowBook, "Borrow Book");

        RetBook.setLayout(new java.awt.BorderLayout(2, 0));

        jPanel3.setLayout(new java.awt.GridLayout(2, 0));

        jLabel4.setText("ISBN:");
        jPanel3.add(jLabel4);

        jLabel5.setText("Customer ID: ");
        jPanel3.add(jLabel5);

        RetBook.add(jPanel3, java.awt.BorderLayout.WEST);

        jPanel4.setLayout(new java.awt.GridLayout(2, 0));

        jPanel4.add(retISBN);

        jPanel4.add(retCusId);

        RetBook.add(jPanel4, java.awt.BorderLayout.CENTER);

        returnBook.setText("Return");
        returnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBookActionPerformed(evt);
            }
        });

        RetBook.add(returnBook, java.awt.BorderLayout.EAST);

        jTabbedPane1.addTab("Return Book", null, RetBook, "Return Book");

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.NORTH);

        outputArea.setPreferredSize(new java.awt.Dimension(0, 10));
        //getContentPane().add(outputArea, java.awt.BorderLayout.CENTER);
	getContentPane().add(sp, java.awt.BorderLayout.CENTER);

        File.setText("File");
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });

        File.add(exitMenuItem);

        jMenuBar1.add(File);

        setJMenuBar(jMenuBar1);

        pack();
    }//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed

        model.closeDBConnection();
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void returnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBookActionPerformed

	try {
	    int isbn = Integer.parseInt(retISBN.getText());
            int cusID = Integer.parseInt(retCusId.getText());
	    outputArea.append(model.returnBook(isbn, cusID));
	} catch ( NumberFormatException nfe ) {
	    JOptionPane.showMessageDialog(null, "The values entered for ISBN or customer id do not have number format. Please try again.",
					  "Format Error", JOptionPane.ERROR_MESSAGE);
	}
    }//GEN-LAST:event_returnBookActionPerformed

    private void borrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowActionPerformed

	try {
	    int isbn = Integer.parseInt(bISBN.getText());
            int cusID = Integer.parseInt(bCusId.getText());
            int day = Integer.parseInt((String)bday.getSelectedItem());
            int year = Integer.parseInt((String)byear.getSelectedItem());
            int month = bmonth.getSelectedIndex();
	    outputArea.append(model.borrowBook(isbn, cusID, day, month, year) + "\n");
	} catch ( NumberFormatException nfe ) {
	    JOptionPane.showMessageDialog(null, "The values entered for ISBN or customer id do not have number format. Please try again.",
					  "Format Error", JOptionPane.ERROR_MESSAGE);
	}
    }//GEN-LAST:event_borrowActionPerformed

    private void showAllCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllCusActionPerformed

        outputArea.append(model.showAllCustomer() + "\n");
    }//GEN-LAST:event_showAllCusActionPerformed

    private void showCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCusActionPerformed

	try {
	    int j_customerid = Integer.parseInt(JOptionPane.showInputDialog("Enter a customer id"));
	    outputArea.append(model.showCustomer(j_customerid) + "\n");
	} catch ( NumberFormatException nfe ) {
	    JOptionPane.showMessageDialog(null, "The Customer ID entered does not have number format. Please try again.",
					  "Format Error", JOptionPane.ERROR_MESSAGE);
	}
    }//GEN-LAST:event_showCusActionPerformed

    private void showAllAuthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllAuthActionPerformed

        outputArea.append(model.showAllAuthor() + "\n");
    }//GEN-LAST:event_showAllAuthActionPerformed

    private void showAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAuthorActionPerformed

	try {
	    int j_authorid = Integer.parseInt(JOptionPane.showInputDialog("Enter an author id"));
	    outputArea.append(model.showAuthor(j_authorid) + "\n");
	} catch ( NumberFormatException nfe ) {
	    JOptionPane.showMessageDialog(null, "The Author ID entered does not have number format. Please try again.",
					  "Format Error", JOptionPane.ERROR_MESSAGE);
	}
    }//GEN-LAST:event_showAuthorActionPerformed

    private void showLoanedBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showLoanedBookActionPerformed

        outputArea.append(model.showLoanedBook() + "\n");
    }//GEN-LAST:event_showLoanedBookActionPerformed

    private void showCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCatActionPerformed

        outputArea.append(model.showCatalogue() + "\n");
    }//GEN-LAST:event_showCatActionPerformed

    private void bookLookUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookLookUpActionPerformed

	try {
	    int j_isbn = Integer.parseInt(JOptionPane.showInputDialog("Enter an isbn"));
	    outputArea.append(model.bookLookUp(j_isbn) + "\n");
	} catch  ( NumberFormatException nfe ) {
	     JOptionPane.showMessageDialog(null, "The ISBN entered does not have number format. Please try again.",
					   "Format Error", JOptionPane.ERROR_MESSAGE);
	}
    }//GEN-LAST:event_bookLookUpActionPerformed

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        model.closeDBConnection();
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private String specialInputDialog(String message) {
	JOptionPane pane = new JOptionPane(message);
	Object[] options = { "OK"};
	pane.setWantsInput(true);
	pane.setOptions(options);
	JDialog dialog = pane.createDialog(this, "input");
	dialog.show();
	return (String)pane.getInputValue();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Comp302 c302 = new Comp302();
        c302.setSize(600,600);
        c302.show();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel Author;
    private javax.swing.JTextField bCusId;
    private javax.swing.JPanel Customer;
    private javax.swing.JPanel BorrowBook;
    private javax.swing.JButton showCat;
    private javax.swing.JPanel Book;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox byear;
    private javax.swing.JButton showLoanedBook;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton returnBook;
    private javax.swing.JTextField retCusId;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JPanel RetBook;
    private javax.swing.JTextArea outputArea;
    private javax.swing.JButton showAllCus;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton showAuthor;
    private javax.swing.JTextField bISBN;
    private javax.swing.JTextField retISBN;
    private javax.swing.JMenu File;
    private javax.swing.JComboBox bmonth;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton borrow;
    private javax.swing.JButton showAllAuth;
    private javax.swing.JButton showCus;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox bday;
    private javax.swing.JButton bookLookUp;
    private javax.swing.JMenuBar jMenuBar1;
    private AuthDialog ad;
    // End of variables declaration//GEN-END:variables

    private SqlModel302 model;

}

class AuthDialog extends JDialog {

    public AuthDialog() {
	this(null, "", false);
    }

    public AuthDialog(JFrame parent) {
	this(parent, "", true);
    }
    
    public AuthDialog(JFrame parent, String title) {
	this(parent, title, true);
    }
    
    public AuthDialog(JFrame parent, String title, boolean modal) {
	super(parent, title, modal);
	setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
	ok =  new JButton("Done");
	ok.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
	ok.addActionListener(new java.awt.event.ActionListener() {
		public void actionPerformed(java.awt.event.ActionEvent e) { 
		    java.util.StringTokenizer st = new java.util.StringTokenizer(usernameTf.getText());
		    if (! st.hasMoreTokens() ) {
			JOptionPane.showMessageDialog(null, "There are no meaningful text in user name textfield",
						      "Format Error", JOptionPane.ERROR_MESSAGE);
			return;
		    }
		    st = new java.util.StringTokenizer(new String(passwdTf.getPassword()));
		    if (! st.hasMoreTokens() ) {
			JOptionPane.showMessageDialog(null, "There are no meaningful text in password",
						      "Format Error", JOptionPane.ERROR_MESSAGE);
			return;
		    }
		    setVisible(false); }
	    });

	javax.swing.border.Border padding = BorderFactory.createEmptyBorder(20,20,5,20);
	labelPanel.setBorder(padding);
	inputPanel.setBorder(padding);

	labelPanel.setLayout(new java.awt.GridLayout(2, 1));
	labelPanel.add(username);
	labelPanel.add(passwd);
	inputPanel.setLayout(new java.awt.GridLayout(2, 1));
	inputPanel.add(usernameTf);
	inputPanel.add(passwdTf);

	intro.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
	getContentPane().add(intro, java.awt.BorderLayout.NORTH);
	getContentPane().add(labelPanel, java.awt.BorderLayout.WEST);
	getContentPane().add(inputPanel, java.awt.BorderLayout.CENTER);
	getContentPane().add(ok, java.awt.BorderLayout.SOUTH);
	pack();
    }
	
    public String getUserName() {
	return usernameTf.getText();
    }

    public String getDatabasePassword() {
	return new String(passwdTf.getPassword());
    }

    private JButton ok;
    private JLabel intro = new JLabel("Please set or reset your username and database password");
    private JPanel dialogPanel = new JPanel();
    private JPanel labelPanel = new JPanel();
    private JPanel inputPanel = new JPanel();
    private JLabel username = new JLabel("User Name: ");
    private JTextField usernameTf = new JTextField(20);
    private JLabel passwd = new JLabel("Database Password: ");
    private JPasswordField passwdTf =  new JPasswordField(20);
}
